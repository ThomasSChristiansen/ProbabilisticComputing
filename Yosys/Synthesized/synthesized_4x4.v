/* Generated by Yosys 0.50+56 (git sha1 78960292d, x86_64-w64-mingw32-g++ 13.2.1 -O3) */

(* top =  1  *)
(* src = "Multiplier_4x4.v:23.1-33.10" *)
module Multiplier_4x4(a, b, s);
  (* src = "andornot.v:2.24-2.25" *)
  wire _000_;
  (* src = "andornot.v:2.33-2.34" *)
  wire _001_;
  (* src = "andornot.v:2.43-2.44" *)
  wire _002_;
  (* src = "andornot.v:3.10-3.12" *)
  wire _003_;
  (* src = "andornot.v:2.24-2.25" *)
  wire _004_;
  (* src = "andornot.v:2.33-2.34" *)
  wire _005_;
  (* src = "andornot.v:2.43-2.44" *)
  wire _006_;
  (* src = "andornot.v:3.10-3.12" *)
  wire _007_;
  (* src = "andornot.v:10.23-10.24" *)
  wire _008_;
  (* src = "andornot.v:10.32-10.33" *)
  wire _009_;
  (* src = "andornot.v:10.42-10.43" *)
  wire _010_;
  (* src = "andornot.v:11.10-11.12" *)
  wire _011_;
  (* src = "andornot.v:2.24-2.25" *)
  wire _012_;
  (* src = "andornot.v:2.33-2.34" *)
  wire _013_;
  (* src = "andornot.v:2.43-2.44" *)
  wire _014_;
  (* src = "andornot.v:3.10-3.12" *)
  wire _015_;
  (* src = "andornot.v:10.23-10.24" *)
  wire _016_;
  (* src = "andornot.v:10.32-10.33" *)
  wire _017_;
  (* src = "andornot.v:10.42-10.43" *)
  wire _018_;
  (* src = "andornot.v:11.10-11.12" *)
  wire _019_;
  (* src = "andornot.v:10.23-10.24" *)
  wire _020_;
  (* src = "andornot.v:10.32-10.33" *)
  wire _021_;
  (* src = "andornot.v:10.42-10.43" *)
  wire _022_;
  (* src = "andornot.v:11.10-11.12" *)
  wire _023_;
  (* src = "andornot.v:10.23-10.24" *)
  wire _024_;
  (* src = "andornot.v:10.32-10.33" *)
  wire _025_;
  (* src = "andornot.v:10.42-10.43" *)
  wire _026_;
  (* src = "andornot.v:11.10-11.12" *)
  wire _027_;
  (* src = "andornot.v:2.24-2.25" *)
  wire _028_;
  (* src = "andornot.v:2.33-2.34" *)
  wire _029_;
  (* src = "andornot.v:2.43-2.44" *)
  wire _030_;
  (* src = "andornot.v:3.10-3.12" *)
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  (* src = "Multiplier_4x4.v:25.12-25.13" *)
  input [0:7] a;
  wire [0:7] a;
  (* src = "Multiplier_4x4.v:26.12-26.13" *)
  input [0:7] b;
  wire [0:7] b;
  (* src = "Multiplier_4x4.v:28.13-28.14" *)
  output [0:7] s;
  wire [0:7] s;
  assign s[7] = b[7] & a[7];
  assign _097_ = a[6] & b[7];
  assign _098_ = b[6] & a[7];
  assign s[6] = _098_ ^ _097_;
  assign _099_ = ~(a[5] & b[7]);
  assign _100_ = ~(b[6] & a[6]);
  assign _101_ = ~(_100_ ^ _099_);
  assign _102_ = ~(b[5] & a[7]);
  assign _103_ = ~(_102_ ^ _101_);
  assign _104_ = _098_ & _097_;
  assign s[5] = ~(_104_ ^ _103_);
  assign _105_ = ~(a[4] & b[7]);
  assign _106_ = ~(b[6] & a[5]);
  assign _107_ = ~(_106_ ^ _105_);
  assign _108_ = ~(b[5] & a[6]);
  assign _109_ = ~(_108_ ^ _107_);
  assign _110_ = ~(_100_ | _099_);
  assign _111_ = ~(_102_ | _101_);
  assign _112_ = ~(_111_ | _110_);
  assign _113_ = ~(_112_ ^ _109_);
  assign _114_ = b[4] & a[7];
  assign _115_ = ~(_114_ ^ _113_);
  assign _116_ = _104_ &(* module_not_derived = 32'd1 *) (* src = "andornot.v:6.12-6.43" *)  _003_;
  assign _003_ = ~(* module_not_derived = 32'd1 *) (* src = "andornot.v:5.12-5.36" *) _103_;
  assign _117_ = ~_116_;
  assign s[4] = ~(_117_ ^ _115_);
  assign _118_ = ~(a[3] & b[7]);
  assign _119_ = ~(b[6] & a[4]);
  assign _120_ = ~(_119_ ^ _118_);
  assign _121_ = ~(b[5] & a[5]);
  assign _122_ = ~(_121_ ^ _120_);
  assign _123_ = ~(_106_ | _105_);
  assign _124_ = ~(_108_ | _107_);
  assign _125_ = ~(_124_ | _123_);
  assign _126_ = ~(_125_ ^ _122_);
  assign _127_ = b[4] & a[6];
  assign _128_ = b[3] & a[7];
  assign _129_ = ~(_128_ ^ _127_);
  assign _130_ = _129_ ^ _126_;
  assign _131_ = ~(_112_ | _109_);
  assign _132_ = _114_ &(* module_not_derived = 32'd1 *) (* src = "andornot.v:6.12-6.43" *)  _007_;
  assign _007_ = ~(* module_not_derived = 32'd1 *) (* src = "andornot.v:5.12-5.36" *) _113_;
  assign _133_ = ~(_132_ | _131_);
  assign _134_ = ~(_133_ ^ _130_);
  assign _011_ = ~(* module_not_derived = 32'd1 *) (* src = "andornot.v:13.12-13.36" *) _115_;
  assign _135_ = _117_ |(* module_not_derived = 32'd1 *) (* src = "andornot.v:14.11-14.41" *)  _011_;
  assign s[3] = ~(_135_ ^ _134_);
  assign _136_ = ~(a[1] & b[7]);
  assign _137_ = ~(b[6] & a[2]);
  assign _138_ = ~(_137_ ^ _136_);
  assign _139_ = ~(b[5] & a[3]);
  assign _140_ = ~(_139_ ^ _138_);
  assign _141_ = a[2] & b[7];
  assign _142_ = b[6] & a[3];
  assign _143_ = _142_ & _141_;
  assign _144_ = ~(b[5] & a[4]);
  assign _145_ = ~(_142_ ^ _141_);
  assign _146_ = ~(_145_ | _144_);
  assign _147_ = ~(_146_ | _143_);
  assign _148_ = ~(_147_ ^ _140_);
  assign _149_ = ~(b[4] & a[4]);
  assign _150_ = b[3] & a[5];
  assign _151_ = _150_ ^ _149_;
  assign _152_ = b[2] & a[6];
  assign _153_ = ~_152_;
  assign _154_ = ~(_153_ ^ _151_);
  assign _155_ = ~(_154_ ^ _148_);
  assign _156_ = ~(_145_ ^ _144_);
  assign _157_ = ~(_119_ | _118_);
  assign _158_ = ~(_121_ | _120_);
  assign _159_ = ~(_158_ | _157_);
  assign _160_ = ~(_159_ | _156_);
  assign _161_ = b[4] & a[5];
  assign _162_ = b[3] & a[6];
  assign _163_ = ~(_162_ ^ _161_);
  assign _164_ = b[2] & a[7];
  assign _165_ = ~_164_;
  assign _166_ = ~(_165_ ^ _163_);
  assign _032_ = ~(_159_ ^ _156_);
  assign _033_ = ~(_032_ | _166_);
  assign _034_ = ~(_033_ | _160_);
  assign _035_ = ~(_034_ ^ _155_);
  assign _036_ = _162_ & _161_;
  assign _037_ = ~(_165_ | _163_);
  assign _038_ = _037_ | _036_;
  assign _039_ = b[1] & a[7];
  assign _040_ = ~(_039_ ^ _038_);
  assign _041_ = ~(_040_ ^ _035_);
  assign _042_ = ~(_032_ ^ _166_);
  assign _043_ = ~(_125_ | _122_);
  assign _044_ = ~(_129_ | _126_);
  assign _045_ = ~(_044_ | _043_);
  assign _046_ = ~(_045_ | _042_);
  assign _047_ = _128_ & _127_;
  assign _048_ = ~(_045_ ^ _042_);
  assign _049_ = _047_ &(* module_not_derived = 32'd1 *) (* src = "andornot.v:6.12-6.43" *)  _015_;
  assign _015_ = ~(* module_not_derived = 32'd1 *) (* src = "andornot.v:5.12-5.36" *) _048_;
  assign _050_ = ~(_049_ | _046_);
  assign _051_ = ~(_050_ ^ _041_);
  assign _052_ = ~(_048_ ^ _047_);
  assign _019_ = ~(* module_not_derived = 32'd1 *) (* src = "andornot.v:13.12-13.36" *) _130_;
  assign _053_ = _133_ |(* module_not_derived = 32'd1 *) (* src = "andornot.v:14.11-14.41" *)  _019_;
  assign _023_ = ~(* module_not_derived = 32'd1 *) (* src = "andornot.v:13.12-13.36" *) _052_;
  assign _054_ = _053_ |(* module_not_derived = 32'd1 *) (* src = "andornot.v:14.11-14.41" *)  _023_;
  assign _055_ = ~(_054_ ^ _051_);
  assign _056_ = _053_ ^ _052_;
  assign _027_ = ~(* module_not_derived = 32'd1 *) (* src = "andornot.v:13.12-13.36" *) _134_;
  assign _057_ = _135_ |(* module_not_derived = 32'd1 *) (* src = "andornot.v:14.11-14.41" *)  _027_;
  assign _058_ = _057_ | _056_;
  assign s[1] = _058_ ^ _055_;
  assign _059_ = a[0] & b[7];
  assign _060_ = b[6] & a[1];
  assign _061_ = ~(_060_ ^ _059_);
  assign _062_ = b[5] & a[2];
  assign _063_ = ~(_062_ ^ _061_);
  assign _064_ = ~(_137_ | _136_);
  assign _065_ = ~(_139_ | _138_);
  assign _066_ = ~(_065_ | _064_);
  assign _067_ = ~(_066_ ^ _063_);
  assign _068_ = ~(b[4] & a[3]);
  assign _069_ = b[3] & a[4];
  assign _070_ = ~(_069_ ^ _068_);
  assign _071_ = b[2] & a[5];
  assign _072_ = ~(_071_ ^ _070_);
  assign _073_ = ~(_072_ ^ _067_);
  assign _074_ = ~(_147_ | _140_);
  assign _075_ = ~(_154_ | _148_);
  assign _076_ = ~(_075_ | _074_);
  assign _077_ = ~(_076_ ^ _073_);
  assign _078_ = _150_ &(* module_not_derived = 32'd1 *) (* src = "andornot.v:6.12-6.43" *)  _031_;
  assign _031_ = ~(* module_not_derived = 32'd1 *) (* src = "andornot.v:5.12-5.36" *) _149_;
  assign _079_ = ~(_153_ | _151_);
  assign _080_ = ~(_079_ | _078_);
  assign _081_ = b[1] & a[6];
  assign _082_ = ~(_081_ ^ _080_);
  assign _083_ = b[0] & a[7];
  assign _084_ = ~(_083_ ^ _082_);
  assign _085_ = ~(_084_ ^ _077_);
  assign _086_ = ~(_034_ | _155_);
  assign _087_ = ~(_040_ | _035_);
  assign _088_ = ~(_087_ | _086_);
  assign _089_ = ~(_088_ ^ _085_);
  assign _090_ = _039_ & _038_;
  assign _091_ = ~(_090_ ^ _089_);
  assign _092_ = ~(_050_ | _041_);
  assign _093_ = ~(_092_ ^ _091_);
  assign _094_ = ~(_054_ | _051_);
  assign _095_ = ~(_058_ | _055_);
  assign _096_ = ~(_095_ | _094_);
  assign s[0] = ~(_096_ ^ _093_);
  assign s[2] = _057_ ^ _056_;
endmodule
